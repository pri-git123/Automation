{"uid":"7944ef0079ee0183","name":"test_Shareworkspace","fullName":"testcases.test_login2.TestWorkspace#test_Shareworkspace","historyId":"75e2a252a33ce865740307e0cf534b05","time":{"start":1709197524236,"stop":1709197524239,"duration":3},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//span[contains(@class, 'refreshingIcon')]\"}\n  (Session info: chrome=122.0.6261.69); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n0   chromedriver                        0x000000010449853c chromedriver + 3966268\n1   chromedriver                        0x0000000104490ac8 chromedriver + 3934920\n2   chromedriver                        0x0000000104113da0 chromedriver + 277920\n3   chromedriver                        0x0000000104156394 chromedriver + 549780\n4   chromedriver                        0x000000010418ebf0 chromedriver + 781296\n5   chromedriver                        0x000000010414afb0 chromedriver + 503728\n6   chromedriver                        0x000000010414ba28 chromedriver + 506408\n7   chromedriver                        0x000000010445d724 chromedriver + 3725092\n8   chromedriver                        0x0000000104461c18 chromedriver + 3742744\n9   chromedriver                        0x000000010444620c chromedriver + 3629580\n10  chromedriver                        0x0000000104462714 chromedriver + 3745556\n11  chromedriver                        0x0000000104439584 chromedriver + 3577220\n12  chromedriver                        0x0000000104480f74 chromedriver + 3870580\n13  chromedriver                        0x0000000104481118 chromedriver + 3871000\n14  chromedriver                        0x0000000104490738 chromedriver + 3934008\n15  libsystem_pthread.dylib             0x000000018a38bfa8 _pthread_start + 148\n16  libsystem_pthread.dylib             0x000000018a386da0 thread_start + 8","statusTrace":"self = <testcases.test_login2.TestWorkspace object at 0x104e3c890>\n\n    def test_Shareworkspace(self):\n>       refresh_button = self.driver.find_element(By.XPATH, \"//span[contains(@class, 'refreshingIcon')]\")\n\ntestcases/test_login2.py:83: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x104e1ec90>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...00018a38bfa8 _pthread_start + 148\\\\n16  libsystem_pthread.dylib             0x000000018a386da0 thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//span[contains(@class, 'refreshingIcon')]\"}\nE         (Session info: chrome=122.0.6261.69); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       0   chromedriver                        0x000000010449853c chromedriver + 3966268\nE       1   chromedriver                        0x0000000104490ac8 chromedriver + 3934920\nE       2   chromedriver                        0x0000000104113da0 chromedriver + 277920\nE       3   chromedriver                        0x0000000104156394 chromedriver + 549780\nE       4   chromedriver                        0x000000010418ebf0 chromedriver + 781296\nE       5   chromedriver                        0x000000010414afb0 chromedriver + 503728\nE       6   chromedriver                        0x000000010414ba28 chromedriver + 506408\nE       7   chromedriver                        0x000000010445d724 chromedriver + 3725092\nE       8   chromedriver                        0x0000000104461c18 chromedriver + 3742744\nE       9   chromedriver                        0x000000010444620c chromedriver + 3629580\nE       10  chromedriver                        0x0000000104462714 chromedriver + 3745556\nE       11  chromedriver                        0x0000000104439584 chromedriver + 3577220\nE       12  chromedriver                        0x0000000104480f74 chromedriver + 3870580\nE       13  chromedriver                        0x0000000104481118 chromedriver + 3871000\nE       14  chromedriver                        0x0000000104490738 chromedriver + 3934008\nE       15  libsystem_pthread.dylib             0x000000018a38bfa8 _pthread_start + 148\nE       16  libsystem_pthread.dylib             0x000000018a386da0 thread_start + 8\n\n.venv/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver_setup","time":{"start":1709197409482,"stop":1709197414476,"duration":4994},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"afterStages":[{"name":"driver_setup::0","time":{"start":1709197524254,"stop":1709197524310,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('driver_setup')"},{"name":"parentSuite","value":"testcases"},{"name":"suite","value":"test_login2"},{"name":"subSuite","value":"TestWorkspace"},{"name":"host","value":"Nishants-MacBook-Air.local"},{"name":"thread","value":"4575-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcases.test_login2"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.usefixtures('driver_setup')"]},"source":"7944ef0079ee0183.json","parameterValues":[]}